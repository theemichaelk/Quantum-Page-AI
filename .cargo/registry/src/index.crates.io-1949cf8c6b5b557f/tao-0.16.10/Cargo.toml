# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.56"
name = "tao"
version = "0.16.10"
authors = [
    "Tauri Programme within The Commons Conservancy",
    "The winit contributors",
]
build = "build.rs"
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Cross-platform window manager library."
documentation = "https://docs.rs/tao"
readme = "README.md"
keywords = ["windowing"]
categories = ["gui"]
license = "Apache-2.0"
repository = "https://github.com/tauri-apps/tao"

[package.metadata.docs.rs]
default-target = "x86_64-unknown-linux-gnu"
features = [
    "serde",
    "tray",
    "dox",
]
targets = [
    "i686-pc-windows-msvc",
    "x86_64-pc-windows-msvc",
    "i686-unknown-linux-gnu",
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-darwin",
]

[lib]
name = "tao"
path = "src/lib.rs"

[[example]]
name = "accelerator"
path = "examples/accelerator.rs"

[[example]]
name = "control_flow"
path = "examples/control_flow.rs"

[[example]]
name = "cursor"
path = "examples/cursor.rs"

[[example]]
name = "cursor_grab"
path = "examples/cursor_grab.rs"

[[example]]
name = "custom_events"
path = "examples/custom_events.rs"

[[example]]
name = "custom_menu"
path = "examples/custom_menu.rs"

[[example]]
name = "drag_window"
path = "examples/drag_window.rs"

[[example]]
name = "fullscreen"
path = "examples/fullscreen.rs"

[[example]]
name = "global_shortcut"
path = "examples/global_shortcut.rs"

[[example]]
name = "handling_close"
path = "examples/handling_close.rs"

[[example]]
name = "min_max_size"
path = "examples/min_max_size.rs"

[[example]]
name = "minimize"
path = "examples/minimize.rs"

[[example]]
name = "monitor_list"
path = "examples/monitor_list.rs"

[[example]]
name = "mouse_wheel"
path = "examples/mouse_wheel.rs"

[[example]]
name = "multithreaded"
path = "examples/multithreaded.rs"

[[example]]
name = "multiwindow"
path = "examples/multiwindow.rs"

[[example]]
name = "parentwindow"
path = "examples/parentwindow.rs"

[[example]]
name = "request_redraw"
path = "examples/request_redraw.rs"

[[example]]
name = "request_redraw_threaded"
path = "examples/request_redraw_threaded.rs"

[[example]]
name = "resizable"
path = "examples/resizable.rs"

[[example]]
name = "set_ime_position"
path = "examples/set_ime_position.rs"

[[example]]
name = "system_tray"
path = "examples/system_tray.rs"

[[example]]
name = "theme"
path = "examples/theme.rs"

[[example]]
name = "timer"
path = "examples/timer.rs"

[[example]]
name = "transparent"
path = "examples/transparent.rs"

[[example]]
name = "video_modes"
path = "examples/video_modes.rs"

[[example]]
name = "window"
path = "examples/window.rs"

[[example]]
name = "window_debug"
path = "examples/window_debug.rs"

[[example]]
name = "window_icon"
path = "examples/window_icon.rs"

[[example]]
name = "window_run_return"
path = "examples/window_run_return.rs"

[[test]]
name = "send_objects"
path = "tests/send_objects.rs"

[[test]]
name = "serde_objects"
path = "tests/serde_objects.rs"

[[test]]
name = "sync_object"
path = "tests/sync_object.rs"

[dependencies.bitflags]
version = "1"

[dependencies.crossbeam-channel]
version = "0.5"

[dependencies.instant]
version = "0.1"

[dependencies.lazy_static]
version = "1"

[dependencies.libc]
version = "0.2"

[dependencies.log]
version = "0.4"

[dependencies.raw-window-handle]
version = "0.5"

[dependencies.serde]
version = "1"
features = ["serde_derive"]
optional = true

[dev-dependencies.env_logger]
version = "0.9"

[dev-dependencies.image]
version = "0.24"

[build-dependencies.cc]
version = "1"

[features]
default = []
dox = ["gtk/dox"]
tray = [
    "libappindicator",
    "dirs-next",
]

[target.'cfg(any(target_os = "ios", target_os = "macos"))'.dependencies.objc]
version = "0.2"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.cairo-rs]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.dirs-next]
version = "2.0.0"
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gdk]
version = "0.15"
features = ["v3_22"]

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gdk-pixbuf]
version = "0.15"
features = ["v2_36_8"]

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gdk-sys]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gdkwayland-sys]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gdkx11-sys]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gio]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.glib]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.glib-sys]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gtk]
version = "0.15"
features = ["v3_22"]

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.libappindicator]
version = "0.7.1"
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.parking_lot]
version = "0.12"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.png]
version = "0.17"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.uuid]
version = "1.2"
features = ["v4"]

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.x11-dl]
version = "2.20"

[target.'cfg(target_os = "android")'.dependencies.jni]
version = "0.20"

[target.'cfg(target_os = "android")'.dependencies.ndk]
version = "0.6"

[target.'cfg(target_os = "android")'.dependencies.ndk-context]
version = "0.1"

[target.'cfg(target_os = "android")'.dependencies.ndk-sys]
version = "0.3"

[target.'cfg(target_os = "android")'.dependencies.once_cell]
version = "1"

[target.'cfg(target_os = "android")'.dependencies.tao-macros]
version = "0.1.0"

[target.'cfg(target_os = "macos")'.dependencies.cocoa]
version = "0.24"

[target.'cfg(target_os = "macos")'.dependencies.core-foundation]
version = "0.9"

[target.'cfg(target_os = "macos")'.dependencies.core-graphics]
version = "0.22"

[target.'cfg(target_os = "macos")'.dependencies.dispatch]
version = "0.2"

[target.'cfg(target_os = "macos")'.dependencies.png]
version = "0.17"

[target.'cfg(target_os = "macos")'.dependencies.scopeguard]
version = "1.1"

[target.'cfg(target_os = "windows")'.dependencies.image]
version = "0.24"
default-features = false

[target.'cfg(target_os = "windows")'.dependencies.parking_lot]
version = "0.12"

[target.'cfg(target_os = "windows")'.dependencies.unicode-segmentation]
version = "1.10.0"

[target.'cfg(target_os = "windows")'.dependencies.windows]
version = "0.39.0"
features = [
    "implement",
    "Win32_Devices_HumanInterfaceDevice",
    "Win32_Foundation",
    "Win32_Globalization",
    "Win32_Graphics_Dwm",
    "Win32_Graphics_Gdi",
    "Win32_System_Com",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_DataExchange",
    "Win32_System_Diagnostics_Debug",
    "Win32_System_LibraryLoader",
    "Win32_System_Memory",
    "Win32_System_Ole",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_System_WindowsProgramming",
    "Win32_UI_Accessibility",
    "Win32_UI_Controls",
    "Win32_UI_HiDpi",
    "Win32_UI_Input_Ime",
    "Win32_UI_Input_KeyboardAndMouse",
    "Win32_UI_Input_Pointer",
    "Win32_UI_Input_Touch",
    "Win32_UI_Shell",
    "Win32_UI_TextServices",
    "Win32_UI_WindowsAndMessaging",
]

[target.'cfg(target_os = "windows")'.dependencies.windows-implement]
version = "0.39.0"

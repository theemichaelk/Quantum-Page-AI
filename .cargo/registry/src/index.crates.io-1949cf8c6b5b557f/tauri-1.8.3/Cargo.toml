# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60"
name = "tauri"
version = "1.8.3"
authors = ["Tauri Programme within The Commons Conservancy"]
build = "build.rs"
exclude = [
    "/test",
    "/.scripts",
    "CHANGELOG.md",
    "/target",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Make tiny, secure apps for all desktop platforms with Tauri"
homepage = "https://tauri.app"
readme = "README.md"
categories = [
    "gui",
    "web-programming",
]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/tauri-apps/tauri"

[package.metadata.cargo-udeps.ignore]
normal = [
    "reqwest",
    "nix",
]

[package.metadata.docs.rs]
default-target = "x86_64-unknown-linux-gnu"
features = [
    "wry",
    "custom-protocol",
    "windows7-compat",
    "cli",
    "updater",
    "fs-extract-api",
    "system-tray",
    "devtools",
    "http-multipart",
    "icon-png",
    "test",
    "dox",
    "dialog",
    "global-shortcut",
    "http-request",
    "os-api",
    "process-relaunch",
    "process-exit",
    "protocol-asset",
    "process-command-api",
    "shell-open",
]
no-default-features = true
rustdoc-args = [
    "--cfg",
    "doc_cfg",
]
targets = [
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-darwin",
]

[features]
api-all = [
    "clipboard-all",
    "dialog-all",
    "fs-all",
    "global-shortcut-all",
    "http-all",
    "notification-all",
    "os-all",
    "path-all",
    "process-all",
    "protocol-all",
    "shell-all",
    "window-all",
    "app-all",
]
app-all = [
    "app-show",
    "app-hide",
]
app-hide = []
app-show = []
cli = ["clap"]
clipboard = [
    "tauri-runtime/clipboard",
    "tauri-runtime-wry/clipboard",
]
clipboard-all = [
    "clipboard-write-text",
    "clipboard-read-text",
]
clipboard-read-text = ["clipboard"]
clipboard-write-text = ["clipboard"]
compression = [
    "tauri-macros/compression",
    "tauri-utils/compression",
]
config-json5 = ["tauri-macros/config-json5"]
config-toml = ["tauri-macros/config-toml"]
custom-protocol = ["tauri-macros/custom-protocol"]
default = [
    "wry",
    "compression",
    "objc-exception",
]
devtools = [
    "tauri-runtime/devtools",
    "tauri-runtime-wry/devtools",
]
dialog = ["rfd"]
dialog-all = [
    "dialog-open",
    "dialog-save",
    "dialog-message",
    "dialog-ask",
]
dialog-ask = ["dialog"]
dialog-confirm = ["dialog"]
dialog-message = ["dialog"]
dialog-open = ["dialog"]
dialog-save = ["dialog"]
dox = ["tauri-runtime-wry/dox"]
fs-all = [
    "fs-copy-file",
    "fs-create-dir",
    "fs-exists",
    "fs-read-file",
    "fs-read-dir",
    "fs-remove-dir",
    "fs-remove-file",
    "fs-rename-file",
    "fs-write-file",
]
fs-copy-file = []
fs-create-dir = []
fs-exists = []
fs-extract-api = ["zip"]
fs-read-dir = []
fs-read-file = []
fs-remove-dir = []
fs-remove-file = []
fs-rename-file = []
fs-write-file = []
global-shortcut = [
    "tauri-runtime/global-shortcut",
    "tauri-runtime-wry/global-shortcut",
]
global-shortcut-all = ["global-shortcut"]
http-all = ["http-request"]
http-api = [
    "reqwest",
    "bytes",
    "indexmap",
]
http-multipart = ["reqwest/multipart"]
http-request = ["http-api"]
icon-ico = [
    "infer",
    "ico",
]
icon-png = [
    "infer",
    "png",
]
isolation = [
    "tauri-utils/isolation",
    "tauri-macros/isolation",
]
linux-protocol-headers = [
    "tauri-runtime-wry/linux-headers",
    "webkit2gtk/v2_36",
]
macos-private-api = [
    "tauri-runtime/macos-private-api",
    "tauri-runtime-wry/macos-private-api",
]
native-tls-vendored = ["reqwest/native-tls-vendored"]
notification = [
    "notify-rust",
    "nix",
]
notification-all = [
    "notification",
    "dialog-ask",
]
objc-exception = ["tauri-runtime-wry/objc-exception"]
os-all = [
    "os_info",
    "os-api",
]
os-api = ["sys-locale"]
path-all = []
process-all = [
    "process-relaunch",
    "process-exit",
]
process-command-api = [
    "shared_child",
    "os_pipe",
]
process-exit = []
process-relaunch = []
process-relaunch-dangerous-allow-symlink-macos = ["tauri-utils/process-relaunch-dangerous-allow-symlink-macos"]
protocol-all = ["protocol-asset"]
protocol-asset = []
reqwest-client = ["http-api"]
reqwest-native-tls-vendored = ["native-tls-vendored"]
shell-all = [
    "shell-execute",
    "shell-sidecar",
    "shell-open",
]
shell-execute = [
    "process-command-api",
    "regex",
    "tauri-macros/shell-scope",
]
shell-open = ["shell-open-api"]
shell-open-api = [
    "open",
    "regex",
    "tauri-macros/shell-scope",
]
shell-sidecar = [
    "process-command-api",
    "regex",
    "tauri-macros/shell-scope",
]
system-tray = [
    "tauri-runtime/system-tray",
    "tauri-runtime-wry/system-tray",
]
test = []
tracing = [
    "dep:tracing",
    "tauri-macros/tracing",
    "tauri-runtime-wry/tracing",
]
updater = [
    "minisign-verify",
    "time",
    "base64",
    "http-api",
    "dialog-ask",
    "fs-extract-api",
    "infer",
]
window-all = [
    "window-create",
    "window-center",
    "window-request-user-attention",
    "window-set-resizable",
    "window-set-maximizable",
    "window-set-minimizable",
    "window-set-closable",
    "window-set-title",
    "window-maximize",
    "window-unmaximize",
    "window-minimize",
    "window-unminimize",
    "window-show",
    "window-hide",
    "window-close",
    "window-set-decorations",
    "window-set-always-on-top",
    "window-set-content-protected",
    "window-set-size",
    "window-set-min-size",
    "window-set-max-size",
    "window-set-position",
    "window-set-fullscreen",
    "window-set-focus",
    "window-set-icon",
    "window-set-skip-taskbar",
    "window-set-cursor-grab",
    "window-set-cursor-visible",
    "window-set-cursor-icon",
    "window-set-cursor-position",
    "window-set-ignore-cursor-events",
    "window-start-dragging",
    "window-print",
]
window-center = []
window-close = []
window-create = []
window-data-url = ["data-url"]
window-hide = []
window-maximize = []
window-minimize = []
window-print = []
window-request-user-attention = []
window-set-always-on-top = []
window-set-closable = []
window-set-content-protected = []
window-set-cursor-grab = []
window-set-cursor-icon = []
window-set-cursor-position = []
window-set-cursor-visible = []
window-set-decorations = []
window-set-focus = []
window-set-fullscreen = []
window-set-icon = []
window-set-ignore-cursor-events = []
window-set-max-size = []
window-set-maximizable = []
window-set-min-size = []
window-set-minimizable = []
window-set-position = []
window-set-resizable = []
window-set-size = []
window-set-skip-taskbar = []
window-set-title = []
window-show = []
window-start-dragging = []
window-unmaximize = []
window-unminimize = []
windows7-compat = ["win7-notifications"]
wry = ["tauri-runtime-wry"]

[lib]
name = "tauri"
path = "src/lib.rs"

[dependencies.anyhow]
version = "1.0"

[dependencies.base64]
version = "0.22"
optional = true

[dependencies.bytes]
version = "1"
features = ["serde"]
optional = true

[dependencies.clap]
version = "3"
optional = true

[dependencies.data-url]
version = "0.3"
optional = true

[dependencies.dirs-next]
version = "2.0"

[dependencies.encoding_rs]
version = "0.8"

[dependencies.flate2]
version = "1"

[dependencies.futures-util]
version = "0.3"

[dependencies.getrandom]
version = "0.2"
features = ["std"]

[dependencies.glob]
version = "0.3"

[dependencies.http]
version = "0.2"

[dependencies.ico]
version = "0.4"
optional = true

[dependencies.ignore]
version = "0.4"

[dependencies.indexmap]
version = "1"
features = [
    "std",
    "serde",
]
optional = true

[dependencies.infer]
version = "0.13"
optional = true

[dependencies.log]
version = "0.4"

[dependencies.minisign-verify]
version = "0.2"
optional = true

[dependencies.once_cell]
version = "1"

[dependencies.open]
version = "3"
optional = true

[dependencies.os_info]
version = "3"
optional = true

[dependencies.os_pipe]
version = "1"
optional = true

[dependencies.percent-encoding]
version = "2"

[dependencies.png]
version = "0.17"
optional = true

[dependencies.rand]
version = "0.8"

[dependencies.raw-window-handle]
version = "0.5"

[dependencies.regex]
version = "1"
optional = true

[dependencies.reqwest]
version = "0.11"
features = [
    "json",
    "stream",
]
optional = true

[dependencies.semver]
version = "1"
features = ["serde"]

[dependencies.serde]
version = "1.0"
features = ["derive"]

[dependencies.serde_json]
version = "1.0"
features = [
    "raw_value",
    "preserve_order",
]

[dependencies.serde_repr]
version = "0.1"

[dependencies.serialize-to-javascript]
version = "=0.1.2"

[dependencies.shared_child]
version = "1.0"
optional = true

[dependencies.state]
version = "0.5"

[dependencies.sys-locale]
version = "0.3"
optional = true

[dependencies.tar]
version = "0.4"

[dependencies.tauri-macros]
version = "1.4.7"

[dependencies.tauri-runtime]
version = "0.14.6"

[dependencies.tauri-runtime-wry]
version = "0.14.11"
optional = true

[dependencies.tauri-utils]
version = "1.6.2"
features = ["resources"]

[dependencies.tempfile]
version = "3"

[dependencies.thiserror]
version = "1.0"

[dependencies.time]
version = "0.3"
features = [
    "parsing",
    "formatting",
]
optional = true

[dependencies.tokio]
version = "1"
features = [
    "time",
    "rt",
    "rt-multi-thread",
    "sync",
    "fs",
    "io-util",
]

[dependencies.tracing]
version = "0.1"
optional = true

[dependencies.url]
version = "2"

[dependencies.uuid]
version = "1"
features = ["v4"]

[dependencies.zip]
version = "0.6"
optional = true
default-features = false

[dev-dependencies.cargo_toml]
version = "0.15"

[dev-dependencies.mockito]
version = "0.31"

[dev-dependencies.proptest]
version = "1"

[dev-dependencies.quickcheck]
version = "1"

[dev-dependencies.quickcheck_macros]
version = "1"

[dev-dependencies.serde]
version = "1"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1"

[dev-dependencies.tokio]
version = "1"
features = ["full"]

[dev-dependencies.tokio-test]
version = "0.4"

[build-dependencies.heck]
version = "0.5"

[build-dependencies.once_cell]
version = "1"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.glib]
version = "0.15"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gtk]
version = "0.15"
features = ["v3_20"]

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.nix]
version = "0.26.0"
features = [
    "user",
    "socket",
    "uio",
]
optional = true
default-features = false

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.webkit2gtk]
version = "0.18.2"
features = ["v2_22"]

[target.'cfg(any(target_os = "macos", windows, target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.notify-rust]
version = "4"
optional = true

[target.'cfg(any(target_os = "macos", windows, target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.rfd]
version = "0.10"
features = [
    "gtk3",
    "common-controls-v6",
]
optional = true

[target.'cfg(target_os = "macos")'.dependencies.cocoa]
version = "0.24"

[target.'cfg(target_os = "macos")'.dependencies.embed_plist]
version = "1.2"

[target.'cfg(target_os = "macos")'.dependencies.objc]
version = "0.2"

[target.'cfg(target_os = "macos")'.dependencies.plist]
version = "1"

[target."cfg(windows)".dependencies.dunce]
version = "1"

[target."cfg(windows)".dependencies.webview2-com]
version = "0.19.1"

[target."cfg(windows)".dependencies.win7-notifications]
version = "0.4"
optional = true

[target."cfg(windows)".dependencies.windows]
version = "0.39.0"
features = [
    "Win32_Foundation",
    "Win32_UI_WindowsAndMessaging",
    "Win32_UI_Shell",
]

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(doc_cfg)"]
